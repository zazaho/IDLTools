;;
;; IDLWAVE catalog for library sacha
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Mar 16 13:01:45 2017
;;
(setq idlwave-library-catalog-libname "sacha")
(setq idlwave-library-catalog-routines
 '(("sh_plotlines" pro nil (lib "sh_plotlines.pro" nil "sacha") "%s" (nil ("_extra") ("FILENAME") ("infinity") ("LINESTYLE") ("LOWLIMIT") ("model") ("series") ("trans") ("UPPLIMIT") ("wave") ("xrange") ("YRANGE")))
   ("CleanPlot" pro nil (lib "cleanplot.pro" nil "sacha") "%s" (nil ("print")))
   ("plq" pro nil (lib "plq.pro" nil "sacha") "%s, in" (nil ("_extra") ("abs") ("alpha") ("cont") ("eV") ("fact") ("qin") ("radius") ("return") ("tau") ("temp")))
   ("plphot" pro nil (lib "plphot.pro" nil "sacha") "%s, aar" (nil ("_extra") ("bands") ("oplot") ("pcolor") ("perror") ("ppsym") ("psym") ("pthick")))
   ("sh_plotdet_func" pro nil (lib "sh_plotdet.pro" nil "sacha") "%s, a" (nil ("_extra") ("last")))
   ("sh_plotdet" pro nil (lib "sh_plotdet.pro" nil "sacha") "%s, aar_in" (nil ("_extra") ("auto") ("line_in") ("noprompt") ("updown") ("xrange") ("yrange")))
   ("plerr" pro nil (lib "plerr.pro" nil "sacha") "%s, x, y, er" (nil ("_extra") ("dolimits") ("errorsonly") ("help") ("idx") ("limitsonly") ("symbol_width")))
   ("plcube" pro nil (lib "plcube.pro" nil "sacha") "%s, cube_in, wave_in" (nil ("_extra") ("box") ("help") ("x") ("y")))
   ("showlines" pro nil (lib "showlines.pro" nil "sacha") "%s, a" (nil))
   ("sh_velscale" pro nil (lib "sh_velscale.pro" nil "sacha") "%s, aar" (nil ("CENTER") ("OPLOT") ("VRANGE")))
   ("plt52" pro nil (lib "plt52.pro" nil "sacha") "%s, aarf, title, title2" (nil))
   ("Make_MPEG_Movie" pro nil (lib "make_mpeg_movie.pro" nil "sacha") "%s, data" (nil ("Color") ("Table")))
   ("plcirc" pro nil (lib "plcirc.pro" nil "sacha") "%s, center, radi" (nil ("_extra") ("npoints")))
   ("shps" pro nil (lib "shps.pro" nil "sacha") "%s, f" (nil ("_extra") ("a4land") ("a4port") ("aa") ("filename") ("fixbb") ("font") ("loadtable") ("nott") ("thick")))
   ("pli_ra_format" fun nil (lib "pli_old.pro" nil "sacha") "Result = %s(axis, index, ra)" (nil))
   ("pli_dec_format" fun nil (lib "pli_old.pro" nil "sacha") "Result = %s(axis, index, decIn)" (nil))
   ("pli" pro nil (lib "pli_old.pro" nil "sacha") "%s, image, header" (nil ("_extra") ("autoscale") ("channel") ("coords") ("drot") ("keepbox") ("levels") ("nlevels") ("number") ("oplot") ("shift") ("sources") ("xrange") ("yrange")))
   ("sh_ps" pro nil (lib "sh_ps.pro" nil "sacha") "%s, f" (nil ("_extra") ("a4land") ("a4port") ("aa") ("charsize") ("filename") ("fixbb") ("font") ("loadtable") ("nott") ("pdf") ("thick") ("view")))
   ("fill_between" pro nil (lib "fill_between.pro" nil "sacha") "%s, ain, bin, x" (nil ("_extra") ("xrange")))
   ("sh_ellipse" pro nil (lib "sh_ellipse.pro" nil "sacha") "%s, x0, y0, xsize, ysize" (nil ("_extra") ("angle") ("fcolor") ("fill") ("npoints")))
   ("plotline" pro nil (lib "plotline.pro" nil "sacha") "%s, aar_in, line_in" (nil ("fl") ("sig") ("wl")))
   ("kleur" fun nil (lib "kleur.pro" nil "sacha") "Result = %s(kl)" (nil ("longlist")))
   ("fancy_map" pro nil (lib "fancy_map.pro" nil "sacha") "%s, map, weightmap" (nil))
   ("plotedges" pro nil (lib "plotedges.pro" nil "sacha") "%s" (nil ("_extra") ("edges") ("nu") ("xl") ("yr")))
   ("fill_between_simple" pro nil (lib "fill_between_simple.pro" nil "sacha") "%s, x1_in, y1_in, x2_in, y2_in" (nil ("_extra") ("help") ("xrange")))
   ("pla_head_points" fun nil (lib "plot_arrow.pro" nil "sacha") "Result = %s(ax, ay, hscale)" (nil ("hsize")))
   ("pla_base_points" fun nil (lib "plot_arrow.pro" nil "sacha") "Result = %s(ax, ay, hscale)" (nil ("hsize")))
   ("plot_arrow" pro nil (lib "plot_arrow.pro" nil "sacha") "%s, x_in, y_in" (nil ("_extra") ("drawbase") ("fill") ("help") ("hscale") ("hsize") ("mode") ("spline") ("todevice")))
   ("myct" pro nil (lib "myct.pro" nil "sacha") "%s, table" (nil ("BOTTOM") ("NCOLORS") ("RANGE") ("RGB")))
   ("histfill" pro nil (lib "histfill.pro" nil "sacha") "%s, x, y" (nil ("_extra") ("ymin")))
   ("box" pro nil (lib "box.pro" nil "sacha") "%s, p1, p2, p3, p4, p5" (nil ("_extra") ("label")))
   ("pl_oploterr" pro nil (lib "pl.pro" nil "sacha") "%s, x, y, err" (nil ("_extra") ("upperlimits")))
   ("pl_comparray" fun nil (lib "pl.pro" nil "sacha") "Result = %s(A, B)" (nil))
   ("pl_uniq" fun nil (lib "pl.pro" nil "sacha") "Result = %s(a)" (nil))
   ("pl_xrange" fun nil (lib "pl.pro" nil "sacha") "Result = %s" (nil))
   ("pl_yrange" fun nil (lib "pl.pro" nil "sacha") "Result = %s" (nil))
   ("pl_headkey" fun nil (lib "pl.pro" nil "sacha") "Result = %s(h_in, keyword)" (nil))
   ("pl_replace_key" fun nil (lib "pl.pro" nil "sacha") "Result = %s(InText, aar)" (nil))
   ("pl_ut_to_itk" fun nil (lib "pl.pro" nil "sacha") "Result = %s(erd_header, universal_time)" (nil))
   ("pl_itk0" fun nil (lib "pl.pro" nil "sacha") "Result = %s(a)" (nil))
   ("pl_n2s" fun nil (lib "pl.pro" nil "sacha") "Result = %s(in)" (nil ("format")))
   ("pl_f2s" fun nil (lib "pl.pro" nil "sacha") "Result = %s(f, p2)" (nil ("deci")))
   ("pl_scanname2sdir" fun nil (lib "pl.pro" nil "sacha") "Result = %s(names)" (nil))
   ("pl_bandname2line" fun nil (lib "pl.pro" nil "sacha") "Result = %s(names)" (nil))
   ("pl_select" fun nil (lib "pl.pro" nil "sacha") "Result = %s(in, cond)" (nil ("index") ("status")))
   ("pl_key" pro nil (lib "pl.pro" nil "sacha") "%s, arr, n, colors" (nil))
   ("pl_xtickvalues" fun nil (lib "pl.pro" nil "sacha") "Result = %s(range)" (nil))
   ("pl_xtickformat" fun nil (lib "pl.pro" nil "sacha") "Result = %s(axis, index, value, level)" (nil))
   ("pl_xontop" pro nil (lib "pl.pro" nil "sacha") "%s" (nil))
   ("pl_mark" pro nil (lib "pl.pro" nil "sacha") "%s, mark" (nil ("_extra") ("mrange")))
   ("pl_ymark" pro nil (lib "pl.pro" nil "sacha") "%s, mark" (nil ("_extra") ("mrange")))
   ("pl_define_aar" fun nil (lib "pl.pro" nil "sacha") "Result = %s" (nil ("length")))
   ("pl_is_aar" fun nil (lib "pl.pro" nil "sacha") "Result = %s(var)" (nil))
   ("pl_collapse" fun nil (lib "pl.pro" nil "sacha") "Result = %s(InStruct)" (nil))
   ("pl_help" pro nil (lib "pl.pro" nil "sacha") "%s" (nil))
   ("pl" pro nil (lib "pl.pro" nil "sacha") "%s, in_p1, p2, p3" (nil ("_extra") ("aband") ("adet") ("all") ("ascan") ("autoy") ("bands") ("cbands") ("cfact") ("cm") ("coffset") ("color") ("cshift") ("cutlow") ("dets") ("ecolor") ("error") ("flambda") ("help") ("idx") ("iras") ("jump") ("jymum") ("key") ("ll") ("mark") ("maxy") ("mcolor") ("message") ("mjysrmum") ("mrange") ("mstyle") ("mthick") ("nband") ("ndet") ("nidx") ("nlrs") ("no_off") ("noclip") ("nodata") ("normal") ("nphot") ("nrange") ("nscan") ("nu") ("oplot") ("plambda") ("prange") ("ramps") ("recur") ("redshift") ("returnvalue") ("sbins") ("scans") ("scolor") ("sort") ("srange") ("ssize") ("ssteps") ("ssymbol") ("time") ("title") ("unredshift") ("upperlimits") ("vcmax_in") ("vcmin_in") ("vcolor") ("vcrange") ("white") ("xaxis") ("xmax") ("xmin") ("xontop") ("xrange") ("yaxis") ("ylog") ("ymark") ("ymcolor") ("ymin") ("ymrange") ("ymstyle") ("ymthick")))
   ("in_range" fun nil (lib "plt.pro" nil "sacha") "Result = %s(aot_band, range)" (nil ("WNUM")))
   ("plt" pro nil (lib "plt.pro" nil "sacha") "%s, arb" (nil ("AFF") ("AOT_BANDS") ("AOT_COLOR") ("BAND") ("COLOR") ("FCOLOR") ("FPSYM") ("NOPLOT") ("NOSTAMP") ("OPLOT") ("PSFILE") ("PSYM") ("RANGE") ("THICK") ("TITLE") ("UNIT") ("WNUM") ("XLOG") ("XOFFSET") ("XRANGE") ("XTITLE") ("YLOG") ("YNOZERO") ("YOFFSET") ("YRANGE") ("YSCALE") ("YTITLE") ("YZERO")))
   ("ppl" pro nil (lib "ppl.pro" nil "sacha") "%s, in, power" (nil ("_extra") ("title")))))
