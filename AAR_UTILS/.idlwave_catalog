;;
;; IDLWAVE catalog for library sacha
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Mar 16 13:01:45 2017
;;
(setq idlwave-library-catalog-libname "sacha")
(setq idlwave-library-catalog-routines
 '(("sh_select" fun nil (lib "sh_select.pro" nil "sacha") "Result = %s(in, cond)" (nil))
   ("sh_define_aar" fun nil (lib "sh_define_aar.pro" nil "sacha") "Result = %s" (nil ("header") ("history") ("length")))
   ("srf_write_fits_key" fun nil (lib "srf_write_fits_key.pro" nil "sacha") "Result = %s(head, keyword, value, type, comment, status)" (nil ("FIRST") ("SECOND")))
   ("sh_normalize" fun nil (lib "sh_normalize.pro" nil "sacha") "Result = %s(aar, normxy)" (nil))
   ("sh_itk0" fun nil (lib "sh_itk0.pro" nil "sacha") "Result = %s(a)" (nil))
   ("utc2date" fun nil (lib "utc2date.pro" nil "sacha") "Result = %s(s)" (nil ("format") ("julday")))
   ("sh_combine" fun nil (lib "sh_combine.pro" nil "sacha") "Result = %s(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16)" (nil ("quiet")))
   ("sh_getkey" fun nil (lib "sh_getkey.pro" nil "sacha") "Result = %s(header, keyword)" (nil))
   ("sh_select_range" fun nil (lib "sh_select_range.pro" nil "sacha") "Result = %s(in)" (nil ("_extra") ("deselect") ("help") ("quiet") ("screen") ("xrange")))
   ("object" fun nil (lib "object.pro" nil "sacha") "Result = %s(a)" (nil ("get_object") ("set_object")))
   ("sh_replace" fun nil (lib "sh_replace.pro" nil "sacha") "Result = %s(base, repl_in)" (nil ("xrange")))
   ("jd2rev" fun nil (lib "time2rev.pro" nil "sacha") "Result = %s(tm)" (nil))
   ("srf_read_fits_key" fun nil (lib "srf_read_fits_key.pro" nil "sacha") "Result = %s(header, keyword, value, comment)" (nil ("first") ("second") ("type")))
   ("sel_region_inter" fun nil (lib "sel_region_inter.pro" nil "sacha") "Result = %s(aar)" (nil))
   ("srf_cp_fits_string" pro nil (lib "srf_cp_fits_string.pro" nil "sacha") "%s, head, base" (nil))
   ("sh_is_aar" fun nil (lib "sh_is_aar.pro" nil "sacha") "Result = %s(var)" (nil))
   ("srf_error" pro nil (lib "sh_read_faar.pro" nil "sacha") "%s, code, message" (nil))
   ("srf_define_aar" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s" (nil ("data") ("header") ("history") ("length")))
   ("srf_fits2host" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s(k)" (nil))
   ("srf_rd_fitsfile_hdr" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s(fileinput)" (nil ("fileid") ("keep_history") ("mpath")))
   ("srf_aas_error" pro nil (lib "sh_read_faar.pro" nil "sacha") "%s, code, message, pcode" (nil))
   ("extend_head" pro nil (lib "sh_read_faar.pro" nil "sacha") "%s, head" (nil))
   ("srf_makeheader" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s(head, type)" (nil ("data") ("tunit")))
   ("srf_get_date2" pro nil (lib "sh_read_faar.pro" nil "sacha") "%s, dte" (nil))
   ("srf_get_naxis1" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s(istru)" (nil ("iastring")))
   ("sh_read_faar" fun nil (lib "sh_read_faar.pro" nil "sacha") "Result = %s(faar_file)" (nil ("number") ("start")))
   ("scan2sdir" fun nil (lib "scan2sdir.pro" nil "sacha") "Result = %s(scan)" (nil))
   ("convert_aar" fun nil (lib "convert_aar.pro" nil "sacha") "Result = %s(in)" (nil))
   ("sh_getpolycorrection" fun nil (lib "sh_getpolycorrection.pro" nil "sacha") "Result = %s(aar)" (nil ("_extra")))
   ("band2line" fun nil (lib "band2line.pro" nil "sacha") "Result = %s(band)" (nil))
   ("jd2rev" fun nil (lib "jd2rev.pro" nil "sacha") "Result = %s(jd)" (nil))
   ("frmt_ra" fun nil (lib "wlog.pro" nil "sacha") "Result = %s(ra)" (nil))
   ("frmt_dec" fun nil (lib "wlog.pro" nil "sacha") "Result = %s(dec)" (nil))
   ("wlog" pro nil (lib "wlog.pro" nil "sacha") "%s, aar" (nil ("format") ("out")))))
