;;
;; IDLWAVE catalog for library sacha
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Mar 16 13:01:45 2017
;;
(setq idlwave-library-catalog-libname "sacha")
(setq idlwave-library-catalog-routines
 '(("sh_polycont" fun nil (lib "sh_polycont.pro" nil "sacha") "Result = %s(in, sel)" (nil ("_extra") ("flambda") ("param") ("ZOOM")))
   ("mbb_funct" fun nil (lib "sh_bbfit.pro" nil "sacha") "Result = %s(wave, par)" (nil))
   ("chi2_sh_bbfit" fun nil (lib "sh_bbfit.pro" nil "sacha") "Result = %s(par)" (nil))
   ("sh_bbfit" fun nil (lib "sh_bbfit.pro" nil "sacha") "Result = %s(par1, par2, par3, par4, par5)" (nil ("fixpower") ("flambda") ("outwave") ("power_in") ("relerr") ("scale_in") ("temp_in") ("weight_in") ("xrange")))
   ("CLEAN_COMM" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil))
   ("CF_VER" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, x" (nil ("color") ("device") ("linestyle") ("normalized") ("thickness")))
   ("CF_HOR" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, y" (nil ("color") ("device") ("linestyle") ("normalized") ("thickness")))
   ("READ_FILE" fun nil (lib "sh_cont_fit.pro" nil "sacha") "Result = %s(file)" (nil))
   ("PLOT_DATA" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil ("plot")))
   ("SELECT_LINES" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil ("menu")))
   ("AOT_BAND_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("LINE_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("METHOD_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("method")))
   ("CORRECTION_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("method")))
   ("XRANGE0_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("xrange0")))
   ("XRANGE1_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("xrange1")))
   ("YRANGE0_SEL_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("yrange")))
   ("YRANGE1_SEL_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("yrange")))
   ("YRANGE0_CONT_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("yrange")))
   ("YRANGE1_CONT_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("yrange")))
   ("ADD_POINT" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, coord" (nil))
   ("REM_POINT" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, coord" (nil))
   ("PLOT_SEL1_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("DETERMINE_RANGE" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil ("cont") ("sel")))
   ("PLOT_SEL2_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("PLOT_CONT1_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("PLOT_CONT2_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("OKEE_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("OKEE_BASE_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil))
   ("WIDGET_OKEE" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, text" (nil))
   ("APPLY_CONT" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil))
   ("CHECK_RANGE" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s" (nil))
   ("APPLY_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("CLEAR_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("MAIN_Event" pro nil (lib "sh_cont_fit.pro" nil "sacha") "%s, Event" (nil))
   ("SH_CONT_FIT" fun nil (lib "sh_cont_fit.pro" nil "sacha") "Result = %s(aar_in, aar_sel_in)" (nil ("cont") ("direct") ("filename") ("fixed") ("method") ("power")))
   ("sh_cont" fun nil (lib "sh_cont.pro" nil "sacha") "Result = %s(in, selin)" (nil ("_extra") ("flambda") ("help") ("iras") ("log") ("min") ("nu") ("xlog") ("ylog")))
   ("shc_splinecont" fun nil (lib "shc_splinecont.pro" nil "sacha") "Result = %s(in, sel)" (nil ("flambda")))))
