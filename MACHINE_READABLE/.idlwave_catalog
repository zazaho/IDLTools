;;
;; IDLWAVE catalog for library sacha
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Mar 16 13:01:45 2017
;;
(setq idlwave-library-catalog-libname "sacha")
(setq idlwave-library-catalog-routines
 '(("make_mr" fun nil (lib "make_mr.pro" nil "sacha") "Result = %s(length, mr)" (nil ("descriptions") ("fields") ("help") ("names") ("units")))
   ("precess_1950_to_2000" pro nil (lib "precess_1950_to_2000.pro" nil "sacha") "%s, ra, dec" (nil))
   ("query_mr_disp_text_evt" pro nil (lib "query_mr.pro" nil "sacha") "%s, event" (nil))
   ("query_mr_disp_text" pro nil (lib "query_mr.pro" nil "sacha") "%s, Text" (nil ("Title")))
   ("query_mr_apply_changes" pro nil (lib "query_mr.pro" nil "sacha") "%s" (nil))
   ("query_mr_index_zero" pro nil (lib "query_mr.pro" nil "sacha") "%s, wHandle" (nil))
   ("query_mr_show_sample" pro nil (lib "query_mr.pro" nil "sacha") "%s, wHandle" (nil))
   ("query_mr_set_list_index" pro nil (lib "query_mr.pro" nil "sacha") "%s, Index" (nil))
   ("query_mr_store_edit_data" pro nil (lib "query_mr.pro" nil "sacha") "%s" (nil))
   ("query_mr_Event" pro nil (lib "query_mr.pro" nil "sacha") "%s, sEvent" (nil))
   ("query_mr_apply_changes" pro nil (lib "query_mr.pro" nil "sacha") "%s" (nil))
   ("query_mr" fun nil (lib "query_mr.pro" nil "sacha") "Result = %s(instruct)" (nil ("help")))
   ("print_mr" pro nil (lib "print_mr.pro" nil "sacha") "%s, mr" (nil ("constraint") ("help") ("index") ("lun") ("out")))
   ("struct2mr" fun nil (lib "struct2mr.pro" nil "sacha") "Result = %s(s)" (nil ("auto")))
   ("add_header_mr" pro nil (lib "add_header_mr.pro" nil "sacha") "%s, mr, header" (nil ("help") ("replace")))
   ("col_mr" fun nil (lib "col_mr.pro" nil "sacha") "Result = %s(mr, col)" (nil ("_extra") ("help") ("select")))
   ("join_mr" fun nil (lib "join_mr.pro" nil "sacha") "Result = %s(mr1, mr2, col1, col2)" (nil ("allmatches") ("help") ("index_array") ("keep1") ("keep2") ("keepall")))
   ("add_column_mr" fun nil (lib "add_column_mr.pro" nil "sacha") "Result = %s(mr, data)" (nil ("description") ("help") ("name") ("unit")))
   ("select_mr_multisort" fun nil (lib "select_mr.pro" nil "sacha") "Result = %s(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)" (nil))
   ("select_mr" fun nil (lib "select_mr.pro" nil "sacha") "Result = %s(mr)" (nil ("constraint") ("help") ("index") ("remove") ("sort") ("where")))
   ("read_fmr" fun nil (lib "read_fmr.pro" nil "sacha") "Result = %s(filename_in)" (nil ("columns") ("help") ("missingvalue")))
   ("row_mr" fun nil (lib "row_mr.pro" nil "sacha") "Result = %s(mr, row)" (nil))
   ("select_col_mr" fun nil (lib "select_col_mr.pro" nil "sacha") "Result = %s(mr, columns)" (nil ("help")))
   ("manage_mr_disp_text_evt" pro nil (lib "manage_mr.pro" nil "sacha") "%s, event" (nil))
   ("manage_mr_disp_text" pro nil (lib "manage_mr.pro" nil "sacha") "%s, Text" (nil ("Title")))
   ("manage_mr_apply_changes" pro nil (lib "manage_mr.pro" nil "sacha") "%s" (nil))
   ("manage_mr_index_zero" pro nil (lib "manage_mr.pro" nil "sacha") "%s, wHandle" (nil))
   ("manage_mr_show_sample" pro nil (lib "manage_mr.pro" nil "sacha") "%s, wHandle" (nil))
   ("manage_mr_set_list_index" pro nil (lib "manage_mr.pro" nil "sacha") "%s, Index" (nil))
   ("manage_mr_store_edit_data" pro nil (lib "manage_mr.pro" nil "sacha") "%s" (nil))
   ("manage_mr_Event" pro nil (lib "manage_mr.pro" nil "sacha") "%s, sEvent" (nil))
   ("manage_mr_apply_changes" pro nil (lib "manage_mr.pro" nil "sacha") "%s" (nil))
   ("manage_mr" fun nil (lib "manage_mr.pro" nil "sacha") "Result = %s(instruct)" (nil ("help")))
   ("add_history_mr" pro nil (lib "add_history_mr.pro" nil "sacha") "%s, mr, history" (nil ("help")))
   ("write_fmr_format" fun nil (lib "write_fmr.pro" nil "sacha") "Result = %s(col)" (nil ("fstring") ("length") ("maxdecimals")))
   ("write_fmr" pro nil (lib "write_fmr.pro" nil "sacha") "%s, mr, file" (nil ("columns") ("filename") ("help") ("maxdecimals_in") ("title")))
   ("match_mr" fun nil (lib "match_mr.pro" nil "sacha") "Result = %s(tab1, tab2)" (nil ("add_distance") ("col1") ("col2") ("distances") ("help") ("keep1") ("keep2") ("keepall") ("max_dist") ("multiple") ("precess1") ("precess2") ("remove") ("shift") ("sigma")))
   ("is_mr" fun nil (lib "is_mr.pro" nil "sacha") "Result = %s(mr)" (nil))
   ("pl_mr_ask_column" fun nil (lib "pl_mr.pro" nil "sacha") "Result = %s(mr)" (nil))
   ("pl_mr" pro nil (lib "pl_mr.pro" nil "sacha") "%s, mr, c1, c2" (nil ("_extra") ("return")))
   ("coord_mr" fun nil (lib "coord_mr.pro" nil "sacha") "Result = %s(mr, cols_in)" (nil ("help") ("precess") ("suffix")))
   ("rename_col_mr" pro nil (lib "rename_col_mr.pro" nil "sacha") "%s, struct" (nil ("casesensitive") ("help") ("newdescription") ("newname") ("newunit") ("olddescription") ("oldname") ("oldunit")))
   ("sh_makeindex_mr" pro nil (lib "sh_makeindex_mr.pro" nil "sacha") "%s" (nil ("lun") ("lws")))))
