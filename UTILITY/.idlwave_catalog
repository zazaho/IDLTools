;;
;; IDLWAVE catalog for library sacha
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Thu Mar 16 13:01:45 2017
;;
(setq idlwave-library-catalog-libname "sacha")
(setq idlwave-library-catalog-routines
 '(("default" pro nil (lib "default.pro" nil "sacha") "%s, var, value" (nil))
   ("ra2s" fun nil (lib "ra2s.pro" nil "sacha") "Result = %s(ra)" (nil ("full")))
   ("shc_spline" fun nil (lib "shc_spline.pro" nil "sacha") "Result = %s(x, y, a)" (nil ("bspline")))
   ("nearest_around" fun nil (lib "local_extremes.pro" nil "sacha") "Result = %s(a, val)" (nil))
   ("local_extremes" fun nil (lib "local_extremes.pro" nil "sacha") "Result = %s(p1, p2)" (nil ("around") ("getmax") ("getmin") ("max") ("min")))
   ("percentile" fun nil (lib "percentile.pro" nil "sacha") "Result = %s(indata, percent)" (nil ("bottom") ("normalise") ("replace") ("top")))
   ("sh_comparray" fun nil (lib "sh_comparray.pro" nil "sacha") "Result = %s(a, b)" (nil ("where") ("which")))
   ("sex2deg" fun nil (lib "sex2deg.pro" nil "sacha") "Result = %s(input)" (nil ("help")))
   ("sh_uniq" fun nil (lib "sh_uniq.pro" nil "sacha") "Result = %s(a)" (nil))
   ("center2ad" pro nil (lib "center2ad.pro" nil "sacha") "%s, filename" (nil))
   ("sh_add_tag" fun nil (lib "sh_add_tag.pro" nil "sacha") "Result = %s(old, name, value)" (nil ("replace")))
   ("finitise" fun nil (lib "finitise.pro" nil "sacha") "Result = %s(i)" (nil ("median") ("value")))
   ("match_arrays" fun nil (lib "match_arrays.pro" nil "sacha") "Result = %s(a1, a2, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9)" (nil ("help")))
   ("n2s" fun nil (lib "n2s.pro" nil "sacha") "Result = %s(in)" (nil ("format")))
   ("sh_conv_coords" fun nil (lib "sh_conv_coords.pro" nil "sacha") "Result = %s(in)" (nil ("help") ("noprint") ("to_degree")))
   ("i2s" fun nil (lib "i2s.pro" nil "sacha") "Result = %s(in, pad)" (nil))
   ("pro_add_tag" pro nil (lib "pro_add_tag.pro" nil "sacha") "%s, struct, name, value" (nil ("replace")))
   ("sh_hist2d" fun nil (lib "sh_hist2d.pro" nil "sacha") "Result = %s(x, y)" (nil ("binsize") ("max") ("min") ("weight")))
   ("is_array" fun nil (lib "is_array.pro" nil "sacha") "Result = %s(in)" (nil))
   ("isstruct" fun nil (lib "isstruct.pro" nil "sacha") "Result = %s(v)" (nil))
   ("subdiv" pro nil (lib "subdiv.pro" nil "sacha") "%s, nx, ny" (nil))
   ("pointdensity" fun nil (lib "pointdensity.pro" nil "sacha") "Result = %s(x, y)" (nil ("help") ("index") ("ll") ("nan") ("nbins") ("weight") ("xlog") ("xmax") ("xmin") ("xrange") ("xstdev") ("ylog") ("ymax") ("ymin") ("yrange") ("ystdev")))
   ("WhichXY" pro nil (lib "whichxy.pro" nil "sacha") "%s, x, y" (nil ("_extra")))
   ("point_inside_polygon" fun nil (lib "point_inside_polygon.pro" nil "sacha") "Result = %s(x, y, px, py)" (nil))
   ("collapse" fun nil (lib "collapse.pro" nil "sacha") "Result = %s(arr)" (nil))
   ("Shuffle" fun nil (lib "shuffle.pro" nil "sacha") "Result = %s(arr)" (nil ("seed")))
   ("same_array" fun nil (lib "same_array.pro" nil "sacha") "Result = %s(a1, a2)" (nil))
   ("sh_where_array" fun nil (lib "sh_where_array.pro" nil "sacha") "Result = %s(A, B)" (nil))
   ("is_numeric" fun nil (lib "is_numeric.pro" nil "sacha") "Result = %s(in)" (nil))
   ("dec2s" fun nil (lib "dec2s.pro" nil "sacha") "Result = %s(decIn)" (nil ("full")))
   ("median_absolute_deviation" fun nil (lib "median_absolute_deviation.pro" nil "sacha") "Result = %s(arr_in)" (nil ("_extra") ("nan")))
   ("readfitz" fun nil (lib "readfitz.pro" nil "sacha") "Result = %s(filename, header, heap)" (nil ("_extra")))
   ("display_text_widget_evt" pro nil (lib "display_text_widget.pro" nil "sacha") "%s, event" (nil))
   ("display_text_widget" pro nil (lib "display_text_widget.pro" nil "sacha") "%s, Text" (nil ("Title")))
   ("file_extension" fun nil (lib "file_extension.pro" nil "sacha") "Result = %s(fullname)" (nil ("lowercase") ("rootname") ("uppercase")))
   ("shc_interpol" fun nil (lib "shc_interpol.pro" nil "sacha") "Result = %s(x, y, a)" (nil))
   ("file_decompress" fun nil (lib "file_decompress.pro" nil "sacha") "Result = %s(file)" (nil ("cleanup") ("delete_last") ("help") ("status")))
   ("file_decompress" pro nil (lib "file_decompress.pro" nil "sacha") "%s" (nil ("_extra")))
   ("f2s" fun nil (lib "f2s.pro" nil "sacha") "Result = %s(f, p2)" (nil ("deci")))
   ("shell_expand" fun nil (lib "shell_expand.pro" nil "sacha") "Result = %s(string)" (nil))
   ("is_int" fun nil (lib "is_int.pro" nil "sacha") "Result = %s(in)" (nil))
   ("is_float" fun nil (lib "is_float.pro" nil "sacha") "Result = %s(in)" (nil))
   ("exec" pro nil (lib "exec.pro" nil "sacha") "%s, in" (nil))
   ("strarr_cat" fun nil (lib "strarr_cat.pro" nil "sacha") "Result = %s(strarr)" (nil))
   ("exist" fun nil (lib "interp2d.pro" nil "sacha") "Result = %s(var)" (nil))
   ("where_vector" fun nil (lib "interp2d.pro" nil "sacha") "Result = %s(vector, array, count)" (nil ("case_sens") ("nosort") ("rcount") ("rest") ("trim_string")))
   ("interp2d" fun nil (lib "interp2d.pro" nil "sacha") "Result = %s(A, x0, y0, x1, y1, nxny)" (nil ("bin") ("cubic") ("extrapolate") ("grid") ("missing") ("quintic") ("regular") ("trigrid")))
   ("is_string" fun nil (lib "is_string.pro" nil "sacha") "Result = %s(in)" (nil))
   ("get_keywordfromextra" fun nil (lib "get_keywordfromextra.pro" nil "sacha") "Result = %s(name)" (nil ("_extra")))
   ("sh_setdifference" fun nil (lib "sh_setdifference.pro" nil "sacha") "Result = %s(a, b)" (nil))))
